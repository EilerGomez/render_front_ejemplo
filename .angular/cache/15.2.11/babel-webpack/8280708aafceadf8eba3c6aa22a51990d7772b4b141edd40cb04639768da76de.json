{"ast":null,"code":"import { Compra } from 'src/app/Modelo/Compra';\nimport { ProdcutosCompra } from 'src/app/Modelo/ProductosCompra';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Service/compras.service\";\nimport * as i2 from \"src/app/Service/productos.service\";\nimport * as i3 from \"src/app/Service/serviciotable.service\";\nimport * as i4 from \"@angular/common\";\nfunction ComprasComponent_tr_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"td\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const b_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(b_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(b_r1.nombre);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(b_r1.edad);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(b_r1.parentesco);\n  }\n}\nexport class ComprasComponent {\n  constructor(servicioCompras, servicioProductos, serviceTable) {\n    this.servicioCompras = servicioCompras;\n    this.servicioProductos = servicioProductos;\n    this.serviceTable = serviceTable;\n    this.mostrarNuevaCompra = false;\n    this.totalNuevaCompra = 0;\n    this.mostrarDetalles = false;\n  }\n  ngOnInit() {\n    this.serviceTable.getTable().subscribe(data => {\n      this.obj = data;\n      //this.traerProductos();\n    }, error => {\n      console.log(error);\n    });\n  }\n  guardar() {\n    // Aquí va tu lógica para guardar (ejemplo con HTTP POST)\n    this.serviceTable.postTable(this.nuevaPersona).subscribe({\n      next: resp => {\n        alert('Persona guardada correctamente');\n        this.obj.push(this.nuevaPersona); // Agrega la nueva persona a la tabla\n        this.resetForm();\n      },\n      error: err => {\n        console.error('Error al guardar:', err);\n        alert('Error al guardar la persona');\n      }\n    });\n  }\n  resetForm() {\n    this.nuevaPersona = {\n      id: null,\n      nombre: '',\n      edad: null,\n      parentesco: ''\n    };\n  }\n  verDetalles(compra) {\n    this.mostrarDetalles = true;\n    this.servicioProductos.getProductosNuevaCompra(compra.codigo, this.getRolDB()).subscribe(data => {\n      this.productosNuevaCompra = data;\n      this.codigoDetalleCompra = compra.codigo;\n      this.totalNuevaCompra = compra.total_compra;\n    });\n  }\n  filtrarCompras(filtro) {\n    console.log(\"filtro: \" + filtro);\n  }\n  getRolDB() {\n    let stringUser = localStorage.getItem('usuario');\n    let usuario = stringUser ? JSON.parse(stringUser) : null;\n    let rol = usuario ? usuario.rol : 0;\n    return rol;\n  }\n  getIDUser() {\n    let stringUser = localStorage.getItem('usuario');\n    let usuario = stringUser ? JSON.parse(stringUser) : null;\n    let rol = usuario ? usuario.identificacion : 0;\n    return rol;\n  }\n  getSucursal() {\n    let stringUser = localStorage.getItem('usuario');\n    let usuario = stringUser ? JSON.parse(stringUser) : null;\n    let suc = usuario ? usuario.sucursal : 0;\n    return suc;\n  }\n  nuevaCompra() {\n    //hacer que se agregue una nueva compra\n    this.productosNuevaCompra = [];\n    this.totalNuevaCompra = 0;\n    this.mostrarNuevaCompra = true;\n    let compra = new Compra();\n    compra.usuario = this.getIDUser();\n    compra.sucursal = this.getSucursal();\n    this.servicioCompras.nuevaCompra(compra, this.getRolDB()).subscribe(data => {\n      this.codigoNuevaCompra = data.codigo_compra;\n      console.log(this.codigoNuevaCompra);\n    }, error => {\n      console.log(error);\n    });\n  }\n  traerProductosNuevaCompra(idC) {\n    this.servicioProductos.getProductosNuevaCompra(idC, this.getRolDB()).subscribe(data => {\n      this.productosNuevaCompra = data;\n    }, error => {\n      console.log(error);\n    });\n  }\n  agregarProductoACompra(nuevaCompraForm) {\n    let pc = new ProdcutosCompra(this.codigoNuevaCompra, parseInt(this.productoSeleccionado), this.cantidadProducto, this.precioProducto);\n    this.servicioProductos.nuevoProductoCompra(pc, this.getRolDB()).subscribe(data => {\n      console.log(data);\n      this.traerProductosNuevaCompra(this.codigoNuevaCompra);\n      nuevaCompraForm.resetForm();\n      this.totalNuevaCompra += pc.cantidad * pc.precio_unitario;\n      this.traerProductos();\n    }, error => {\n      console.log(error);\n      alert(\"No cuentas con el dinero sufuciente para realizar esta compra, por favor comunicate con el administrador\");\n    });\n  }\n  traerProductos() {\n    this.servicioProductos.getProductosSucursal(this.getSucursal(), this.getRolDB()).subscribe(data => {\n      this.productos = data;\n    }, error => {\n      console.log(error);\n    });\n  }\n  dejarDeMostrarNuevaCompra() {\n    this.mostrarNuevaCompra = false;\n    if (this.totalNuevaCompra == 0) {\n      //eliminar la compra\n      this.servicioCompras.deleteCompra(this.getRolDB(), this.codigoNuevaCompra).subscribe(data => {\n        console.log(\"compra eliminada\");\n        this.ngOnInit();\n      });\n    } else {\n      this.ngOnInit();\n    }\n  }\n  cancelarCompra() {\n    this.servicioCompras.cancelarCompra(this.getRolDB(), this.codigoNuevaCompra).subscribe(data => {\n      alert(\"Se la cancelado al compra!\");\n      this.mostrarNuevaCompra = false;\n      this.ngOnInit();\n    }, error => {\n      console.log(error);\n    });\n  }\n  static #_ = this.ɵfac = function ComprasComponent_Factory(t) {\n    return new (t || ComprasComponent)(i0.ɵɵdirectiveInject(i1.ComprasService), i0.ɵɵdirectiveInject(i2.ProductosService), i0.ɵɵdirectiveInject(i3.ServiciotableService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ComprasComponent,\n    selectors: [[\"app-compras\"]],\n    decls: 19,\n    vars: 2,\n    consts: [[1, \"container\", \"mt-5\", \"pt-5\"], [1, \"card\"], [1, \"table\", \"table-bordered\"], [1, \"text-center\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function ComprasComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"table\", 2)(5, \"thead\")(6, \"tr\")(7, \"th\");\n        i0.ɵɵtext(8, \"Codigo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"th\");\n        i0.ɵɵtext(10, \"Nombre\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"th\");\n        i0.ɵɵtext(12, \"Edad\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"th\");\n        i0.ɵɵtext(14, \"Parentesco\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"th\", 3);\n        i0.ɵɵtext(16, \"ACCIONES\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(17, \"tbody\");\n        i0.ɵɵtemplate(18, ComprasComponent_tr_18_Template, 10, 4, \"tr\", 4);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"Totales (\", ctx.obj.length, \") \");\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngForOf\", ctx.obj);\n      }\n    },\n    dependencies: [i4.NgForOf],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Compra","ProdcutosCompra","i0","ComprasComponent","constructor","servicioCompras","servicioProductos","serviceTable","ngOnInit","getTable","subscribe","data","obj","error","console","log","guardar","postTable","nuevaPersona","next","resp","alert","push","resetForm","err","id","nombre","edad","parentesco","verDetalles","compra","mostrarDetalles","getProductosNuevaCompra","codigo","getRolDB","productosNuevaCompra","codigoDetalleCompra","totalNuevaCompra","total_compra","filtrarCompras","filtro","stringUser","localStorage","getItem","usuario","JSON","parse","rol","getIDUser","identificacion","getSucursal","suc","sucursal","nuevaCompra","mostrarNuevaCompra","codigoNuevaCompra","codigo_compra","traerProductosNuevaCompra","idC","agregarProductoACompra","nuevaCompraForm","pc","parseInt","productoSeleccionado","cantidadProducto","precioProducto","nuevoProductoCompra","cantidad","precio_unitario","traerProductos","getProductosSucursal","productos","dejarDeMostrarNuevaCompra","deleteCompra","cancelarCompra","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/eiler/Documentos/proyectosPruebas/FRONT_Render/src/app/area-bodega/compras/compras.component.ts","/home/eiler/Documentos/proyectosPruebas/FRONT_Render/src/app/area-bodega/compras/compras.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Compra } from 'src/app/Modelo/Compra';\nimport { ComprasService } from 'src/app/Service/compras.service';\nimport { Usuario } from 'src/app/Modelo/Usuario';\nimport { data, error } from 'jquery';\nimport { Producto } from 'src/app/Modelo/Producto';\nimport { ProductosService } from 'src/app/Service/productos.service';\nimport { ProdcutosCompra } from 'src/app/Modelo/ProductosCompra';\nimport { NgForm } from '@angular/forms';\nimport { MyTable } from 'src/app/Modelo/mytable';\nimport { ServiciotableService } from 'src/app/Service/serviciotable.service';\n@Component({\n  selector: 'app-compras',\n  templateUrl: './compras.component.html',\n  styleUrls: ['./compras.component.css']\n})\nexport class ComprasComponent {\n  constructor(private servicioCompras:ComprasService, private servicioProductos:ProductosService,\n    private serviceTable:ServiciotableService\n  ){}\n  compras!:Compra[]\n  obj!:MyTable[]\n  nuevaPersona!:MyTable\n  mostrarNuevaCompra:boolean=false;\n  productos!:Producto[]\n\n  precioProducto!:number\n  cantidadProducto!:number\n  productoSeleccionado!:any\n\n  codigoNuevaCompra!:number\n\n  productosNuevaCompra !:ProdcutosCompra[]\n\n  totalNuevaCompra:number=0;\n\n  codigoDetalleCompra!:number\n  mostrarDetalles:boolean=false;\n\n  ngOnInit():void{\n    this.serviceTable.getTable().subscribe(data=>{\n      this.obj=data;\n      //this.traerProductos();\n    }, error=>{\n      console.log(error)\n      \n    })\n  }\n   guardar() {\n    // Aquí va tu lógica para guardar (ejemplo con HTTP POST)\n    this.serviceTable.postTable(this.nuevaPersona)\n      .subscribe({\n        next: (resp) => {\n          alert('Persona guardada correctamente');\n          this.obj.push(this.nuevaPersona); // Agrega la nueva persona a la tabla\n          this.resetForm();\n        },\n        error: (err) => {\n          console.error('Error al guardar:', err);\n          alert('Error al guardar la persona');\n        }\n      });\n  }\n\n  resetForm() {\n    this.nuevaPersona = {\n      id:null,\n      nombre: '',\n      edad: null,\n      parentesco: ''\n    };\n  }\n\n\n  verDetalles(compra:Compra){\n    this.mostrarDetalles=true;\n    this.servicioProductos.getProductosNuevaCompra(compra.codigo,this.getRolDB()).subscribe(data=>{\n      this.productosNuevaCompra=data\n      this.codigoDetalleCompra=compra.codigo\n      this.totalNuevaCompra=compra.total_compra\n    })\n  }\n\n  filtrarCompras(filtro:string){\n    console.log(\"filtro: \" + filtro)\n  }\n\n  getRolDB(){\n    let stringUser = localStorage.getItem('usuario');\n    let usuario:Usuario = stringUser? JSON.parse(stringUser):null;\n    let rol = usuario? usuario.rol:0;\n    return rol;\n  }\n  getIDUser(){\n    let stringUser = localStorage.getItem('usuario');\n    let usuario:Usuario = stringUser? JSON.parse(stringUser):null;\n    let rol = usuario? usuario.identificacion:0;\n    return rol;\n  }\n  getSucursal(){\n    let stringUser = localStorage.getItem('usuario');\n    let usuario:Usuario = stringUser? JSON.parse(stringUser):null;\n    let suc = usuario? usuario.sucursal:0;\n    return suc;\n  }\n\n  nuevaCompra(){\n    //hacer que se agregue una nueva compra\n    this.productosNuevaCompra= []\n    this.totalNuevaCompra=0;\n    this.mostrarNuevaCompra=true;\n    let compra = new Compra();\n    compra.usuario=this.getIDUser();\n    compra.sucursal=this.getSucursal();\n    this.servicioCompras.nuevaCompra(compra,this.getRolDB()).subscribe(data=>{\n      this.codigoNuevaCompra=data.codigo_compra;\n      console.log(this.codigoNuevaCompra)\n      \n    },error=>{\n      console.log(error)\n    })\n  }\n\n  traerProductosNuevaCompra(idC:number){\n    this.servicioProductos.getProductosNuevaCompra(idC,this.getRolDB()).subscribe(data=>{\n      this.productosNuevaCompra=data;\n    },error=>{\n      console.log(error)\n    })\n  }\n\n  agregarProductoACompra(nuevaCompraForm:NgForm) {\n    let pc = new ProdcutosCompra(this.codigoNuevaCompra,parseInt(this.productoSeleccionado),this.cantidadProducto,this.precioProducto);\n    this.servicioProductos.nuevoProductoCompra(pc,this.getRolDB()).subscribe(data=>{\n      console.log(data);\n      this.traerProductosNuevaCompra(this.codigoNuevaCompra);\n      nuevaCompraForm.resetForm();\n      this.totalNuevaCompra+=pc.cantidad*pc.precio_unitario;\n      this.traerProductos();\n    }, error=>{\n      console.log(error)\n      alert(\"No cuentas con el dinero sufuciente para realizar esta compra, por favor comunicate con el administrador\")\n    })\n  }\n\n  traerProductos(){\n    this.servicioProductos.getProductosSucursal(this.getSucursal(),this.getRolDB()).subscribe(data=>{\n      this.productos=data;\n    }, error=>{\n      console.log(error)\n    })\n  }\n\n  dejarDeMostrarNuevaCompra(){\n    this.mostrarNuevaCompra=false;\n    if(this.totalNuevaCompra==0){\n      //eliminar la compra\n      this.servicioCompras.deleteCompra(this.getRolDB(),this.codigoNuevaCompra).subscribe(data=>{\n        console.log(\"compra eliminada\");\n        this.ngOnInit();\n      })\n    }else{\n      this.ngOnInit();\n    }\n  }\n\n  cancelarCompra(){\n    this.servicioCompras.cancelarCompra(this.getRolDB(),this.codigoNuevaCompra).subscribe(data=>{\n      alert(\"Se la cancelado al compra!\");\n      this.mostrarNuevaCompra=false;\n      this.ngOnInit();\n    }, error=>{\n      console.log(error);\n    })\n  }\n  \n\n\n\n}\n","\n<div class=\"container mt-5 pt-5\">\n    <!-- Formulario para agregar nueva persona -->\n    \n\n    <!-- Tabla de personas existentes -->\n    <div class=\"card\">\n        <h3>Totales ({{obj.length}}) </h3>\n        \n        <table class=\"table table-bordered\">\n            <thead>\n                <tr>\n                    <th>Codigo</th>\n                    <th>Nombre</th>\n                    <th>Edad</th>\n                    <th>Parentesco</th>\n                    <th class=\"text-center\">ACCIONES</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let b of obj; let i = index\">\n                    <td>{{b.id}}</td>\n                    <td>{{b.nombre}}</td>\n                    <td>{{b.edad}}</td>\n                    <td>{{b.parentesco}}</td>\n                    <td class=\"text-center\">\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}